App

Transactions
- Player player
- Turn turn
- int amount

Rule
- int maxTurns
- int maxPlayers
- int maxDecisions
- int citizenDictatorRatio
- Action dictatorDefault
- Action citizenDefault
- sortTurns()
- sortPlayers()

Game
- Rule rule
- List<Player> players
- List<Turn> turns
- List<Bid> bids
- List<Transaction> transactions

Position
- int X
- int Y

Direction
- LEFT
- RIGHT
- UP
- DOWN

Player
- String id
- String name
- Board board
- Position position
- int wins
- int losses
- int balance
- int score
- move(Direction)


- int getWins()
- int getLosses()
- int getBalance()
- int getScore()


abstract Character extends Player
- Character(Player, Game)
- play(Action)

Dictator extends Character
- Bid makeBid(Player, Amount)

Citizen extends Character

Offer
- int amount
- Player from
- Player to
- Game game

Action (functional interface)
- action(Player, Game)

OfferAction (functional interface)
- action(Player, Game, Offer)

CREATE_OFFER = (offer) => {}
ACCEPT_OFFER = (offer) => {}
REJECT_OFFER = (offer) => {}

Turn
- List<Map<Player, Action>> events

Board
- List<Tile> tiles
- List<Player> players
- Board(int X, int Y) #dimensions
- join(Player)
- leave(Player)

Tile
- Board board
- Position position


GameTile extends Tile
- Game game
